opponents <- matrix(opponents, nrow=64)
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x = as.integer(opponents[1:7])
Average <- mean(chessData$RtgPre[x], na.rm = TRUE)
class(Average)
chessData$avg[1] <- Average
# But when I try to put it in a loop it doesn't work!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[x] <- Average
x <- x+7
}
# But when I try to put it in a loop it doesn't work!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:64){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[x] <- Average
x <- x+7
}
#  This works!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x = as.integer(opponents[8:14])
Average <- mean(chessData$RtgPre[x], na.rm = TRUE)
class(Average)
chessData$avg[2] <- Average
# But when I try to put it in a loop it doesn't work!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:64){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[x] <- Average
x <- x+7
}
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- data.frame(matrix(opponents, nrow=64))
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
x = as.integer(opponents[1,])
class(x)
x
Average <- mean(chessData$RtgPre[x], na.rm = TRUE)
Average
#  This works!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x = as.integer(opponents[1:7])
Average <- mean(chessData$RtgPre[x], na.rm = TRUE)
class(Average)
chessData$avg[1] <- Average
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- data.frame(matrix(opponents, nrow=64))
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
x = as.integer(opponents[1,])
class(x)
x
Average <- mean(chessData$RtgPre[x], na.rm = TRUE)  #Why isn't this taking the mean of only row one?!?!?
Average
# But when I try to put it in a loop it doesn't work!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:64){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[x] <- Average
x <- x+7
print(x)
}
# But when I try to put it in a loop it doesn't work!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[x] <- Average
x <- x+7
print(x)
}
knitr::opts_chunk$set(echo = TRUE)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read.table(file = theUrl, header = FALSE, skip = 1, sep = "|", fill = TRUE, stringsAsFactors = FALSE)
str(rawChessData)
chessData1 <- rawChessData[seq(1 , 195, 3), ]
head(chessData1, 5)
chessData2 <- rawChessData[seq(2 , 195, 3), ]
head(chessData2, 5)
chessData <- cbind(chessData1[-1,1:10], chessData2[-1,1:10])
names(chessData) <- cbind(chessData1[1,1:10], chessData2[1,1:10])
names(chessData)[c(1, 3:10, 11)] <- c('PairNum', 'TotalPts', paste('Round', 1:7, sep=""), 'State')
rownames(chessData) <- NULL
head(chessData, 5)
library(stringr)
USCFID <- str_extract_all(chessData[12], "\\d{8}")
chessData$USCFID <- unlist(USCFID)
RtgPre <- str_extract_all(chessData[12], "R: +\\d{3,4}")
RtgPre <- str_extract_all(RtgPre, "\\d{3,4}")
chessData$RtgPre <- as.integer(unlist(RtgPre))
RtgPost <- str_extract_all(chessData[12], "-> *\\d{3,4}")
RtgPost <- str_extract_all(RtgPost, "\\d{3,4}")
chessData$RtgPost <- as.integer(unlist(RtgPost))
head(chessData[c(2,21:23)], 5)
# But when I try to put it in a loop it doesn't work!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[x] <- Average
x <- x+7
print(x)
}
# But when I try to put it in a loop it doesn't work!!!
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[i] <- Average
x <- x+7
print(x)
}
knitr::opts_chunk$set(echo = TRUE)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read.table(file = theUrl, header = FALSE, skip = 1, sep = "|", fill = TRUE, stringsAsFactors = FALSE)
str(rawChessData)
chessData1 <- rawChessData[seq(1 , 195, 3), ]
head(chessData1, 5)
chessData2 <- rawChessData[seq(2 , 195, 3), ]
head(chessData2, 5)
chessData <- cbind(chessData1[-1,1:10], chessData2[-1,1:10])
names(chessData) <- cbind(chessData1[1,1:10], chessData2[1,1:10])
names(chessData)[c(1, 3:10, 11)] <- c('PairNum', 'TotalPts', paste('Round', 1:7, sep=""), 'State')
rownames(chessData) <- NULL
head(chessData, 5)
library(stringr)
USCFID <- str_extract_all(chessData[12], "\\d{8}")
chessData$USCFID <- unlist(USCFID)
RtgPre <- str_extract_all(chessData[12], "R: +\\d{3,4}")
RtgPre <- str_extract_all(RtgPre, "\\d{3,4}")
chessData$RtgPre <- as.integer(unlist(RtgPre))
RtgPost <- str_extract_all(chessData[12], "-> *\\d{3,4}")
RtgPost <- str_extract_all(RtgPost, "\\d{3,4}")
chessData$RtgPost <- as.integer(unlist(RtgPost))
head(chessData[c(2,21:23)], 5)
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[i] <- Average
x <- x+7
}
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[i] <- Average
x <- x+7
}
library(readr)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read_delim(file = theUrl, header = FALSE, skip = 1, sep = "|", fill = TRUE)
library(readr)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read_delim(file = theUrl, header = FALSE, skip = 1, sep = "|")
library(readr)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read_delim(file = theUrl, skip = 1, delim = "|")
str(rawChessData)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read.table(file = theUrl, header = FALSE, skip = 1, sep = "|", fill = TRUE, stringsAsFactors = FALSE)
str(rawChessData)
library(readr)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read_delim(file = theUrl, skip = 1, delim = "|")
str(rawChessData)
chessData1 <- rawChessData[seq(1 , 195, 3), ]
head(chessData1, 5)
library(readr)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read_delim(file = theUrl, skip = 1, delim = "|")
str(rawChessData)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read.table(file = theUrl, header = FALSE, skip = 1, sep = "|", fill = TRUE, stringsAsFactors = FALSE)
str(rawChessData)
chessData1 <- rawChessData[seq(1 , 195, 3), ]
head(chessData1, 5)
chessData2 <- rawChessData[seq(2 , 195, 3), ]
head(chessData2, 5)
chessData <- cbind(chessData1[-1,1:10], chessData2[-1,1:10])
names(chessData) <- cbind(chessData1[1,1:10], chessData2[1,1:10])
names(chessData)[c(1, 3:10, 11)] <- c('PairNum', 'TotalPts', paste('Round', 1:7, sep=""), 'State')
rownames(chessData) <- NULL
head(chessData, 5)
library(stringr)
USCFID <- str_extract_all(chessData[12], "\\d{8}")
chessData$USCFID <- unlist(USCFID)
RtgPre <- str_extract_all(chessData[12], "R: +\\d{3,4}")
RtgPre <- str_extract_all(RtgPre, "\\d{3,4}")
chessData$RtgPre <- as.integer(unlist(RtgPre))
RtgPost <- str_extract_all(chessData[12], "-> *\\d{3,4}")
RtgPost <- str_extract_all(RtgPost, "\\d{3,4}")
chessData$RtgPost <- as.integer(unlist(RtgPost))
head(chessData[c(2,21:23)], 5)
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[i] <- Average
x <- x+7
}
knitr::opts_chunk$set(echo = TRUE)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read.table(file = theUrl, header = FALSE, skip = 1, sep = "|", fill = TRUE, stringsAsFactors = FALSE)
str(rawChessData)
chessData1 <- rawChessData[seq(1 , 195, 3), ]
head(chessData1, 5)
chessData2 <- rawChessData[seq(2 , 195, 3), ]
head(chessData2, 5)
chessData <- cbind(chessData1[-1,1:10], chessData2[-1,1:10])
names(chessData) <- cbind(chessData1[1,1:10], chessData2[1,1:10])
names(chessData)[c(1, 3:10, 11)] <- c('PairNum', 'TotalPts', paste('Round', 1:7, sep=""), 'State')
rownames(chessData) <- NULL
head(chessData, 5)
library(stringr)
USCFID <- str_extract_all(chessData[12], "\\d{8}")
chessData$USCFID <- unlist(USCFID)
RtgPre <- str_extract_all(chessData[12], "R: +\\d{3,4}")
RtgPre <- str_extract_all(RtgPre, "\\d{3,4}")
chessData$RtgPre <- as.integer(unlist(RtgPre))
RtgPost <- str_extract_all(chessData[12], "-> *\\d{3,4}")
RtgPost <- str_extract_all(RtgPost, "\\d{3,4}")
chessData$RtgPost <- as.integer(unlist(RtgPost))
head(chessData[c(2,21:23)], 5)
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avg[i] <- Average
x <- x+7
}
head(chessData[1,2,25])
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
chessData$avg <- rep(0,64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avgOppRating[i] <- Average
x <- x+7
}
head(chessData[1,2,25])
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avgOppRating[i] <- Average
x <- x+7
}
head(chessData[1,2,25])
knitr::opts_chunk$set(echo = TRUE)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read.table(file = theUrl, header = FALSE, skip = 1, sep = "|", fill = TRUE, stringsAsFactors = FALSE)
str(rawChessData)
chessData1 <- rawChessData[seq(1 , 195, 3), ]
head(chessData1, 5)
chessData2 <- rawChessData[seq(2 , 195, 3), ]
head(chessData2, 5)
chessData <- cbind(chessData1[-1,1:10], chessData2[-1,1:10])
names(chessData) <- cbind(chessData1[1,1:10], chessData2[1,1:10])
names(chessData)[c(1, 3:10, 11)] <- c('PairNum', 'TotalPts', paste('Round', 1:7, sep=""), 'State')
rownames(chessData) <- NULL
head(chessData, 5)
library(stringr)
USCFID <- str_extract_all(chessData[12], "\\d{8}")
chessData$USCFID <- unlist(USCFID)
RtgPre <- str_extract_all(chessData[12], "R: +\\d{3,4}")
RtgPre <- str_extract_all(RtgPre, "\\d{3,4}")
chessData$RtgPre <- as.integer(unlist(RtgPre))
RtgPost <- str_extract_all(chessData[12], "-> *\\d{3,4}")
RtgPost <- str_extract_all(RtgPost, "\\d{3,4}")
chessData$RtgPost <- as.integer(unlist(RtgPost))
head(chessData[c(2,21:23)], 5)
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
#opponents[is.na(opponents)] <- as.numeric(0)
#opponents
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avgOppRating[i] <- Average
x <- x+7
}
head(chessData[1,2,25])
knitr::opts_chunk$set(echo = TRUE)
theUrl <- "https://raw.githubusercontent.com/betsyrosalen/DATA_607_Data_Acquisition_and_Management/master/Project1/tournamentinfo.txt"
rawChessData <- read.table(file = theUrl, header = FALSE, skip = 1, sep = "|", fill = TRUE, stringsAsFactors = FALSE)
str(rawChessData)
chessData1 <- rawChessData[seq(1 , 195, 3), ]
head(chessData1, 5)
chessData2 <- rawChessData[seq(2 , 195, 3), ]
head(chessData2, 5)
chessData <- cbind(chessData1[-1,1:10], chessData2[-1,1:10])
names(chessData) <- cbind(chessData1[1,1:10], chessData2[1,1:10])
names(chessData)[c(1, 3:10, 11)] <- c('PairNum', 'TotalPts', paste('Round', 1:7, sep=""), 'State')
rownames(chessData) <- NULL
head(chessData, 5)
library(stringr)
USCFID <- str_extract_all(chessData[12], "\\d{8}")
chessData$USCFID <- unlist(USCFID)
RtgPre <- str_extract_all(chessData[12], "R: +\\d{3,4}")
RtgPre <- str_extract_all(RtgPre, "\\d{3,4}")
chessData$RtgPre <- as.integer(unlist(RtgPre))
RtgPost <- str_extract_all(chessData[12], "-> *\\d{3,4}")
RtgPost <- str_extract_all(RtgPost, "\\d{3,4}")
chessData$RtgPost <- as.integer(unlist(RtgPost))
head(chessData[c(2,21:23)], 5)
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- mean(chessData$RtgPre[y], na.rm = TRUE)
chessData$avgOppRating[i] <- Average
x <- x+7
}
head(chessData[1,2,25])
str(chessData)
str(chessData)
finalChessData <- chessData[c(2,11,3,22,24),]
View(finalChessData)
str(chessData)
finalChessData <- chessData[,c(2,11,3,22,24)]
finalChessData <- chessData[,c(2,11,3,22,24)]
finalChessData <- chessData[,c(2,11,3,22,24)]
head(finalChessData)
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- round(mean(chessData$RtgPre[y], na.rm = TRUE))
chessData$avgOppRating[i] <- Average
x <- x+7
}
head(chessData[1,2,25])
finalChessData <- chessData[,c(2,11,3,22,24)]
head(finalChessData)
getwd()
setwd("~/GitHub/DATA_607_Data_Acquisition_and_Management/Project1")
write.csv(finalChessData ,
file = "/GitHub/DATA_607_Data_Acquisition_and_Management/Project1/chess.csv",
row.names = FALSE)
write.csv(finalChessData, file = "chess.csv", row.names = FALSE)
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- round(mean(chessData$RtgPre[y], na.rm = TRUE))
chessData$avgOppRating[i] <- Average
x <- x+7
}
head(chessData[,c(1,2,25)])
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- round(mean(chessData$RtgPre[y], na.rm = TRUE))
chessData$avgOppRating[i] <- Average
x <- x+7
}
head(chessData[,c(1,2,24)])
opponents <- t(chessData[4:10])
opponents <- as.integer(str_replace(opponents,"\\w*\\s*(\\d{1,})","\\1"))
opponents <- matrix(opponents, nrow=64)
x <- 1
for (i in 1:nrow(chessData)){
y = as.integer(opponents[x:(x+6)])
Average <- round(mean(chessData$RtgPre[y], na.rm = TRUE))
chessData$avgOppRating[i] <- Average
x <- x+7
}
head(chessData[,c(1,2,24)])
finalChessData <- chessData[,c(2,11,3,22,24)]
head(finalChessData)
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(tidyverse)
tournament.data <- readLines('https://raw.githubusercontent.com/niteen11/MSDS/master/DATA607/Week4/dataset/tournamentinfo.txt')
head(tournament.data,10)
typeof(tournament.data)
tournament.data <- tournament.data[-c(0:4)]
head(tournament.data)
tournament.data <- tournament.data[sapply(tournament.data, nchar) > 0]
head(tournament.data)
# odd data points represent player match info
player.data <- c(seq(1, length(tournament.data), 3))
player.info <- tournament.data[player.data]
#even  data points represent player match info
player.rating.data <- c(seq(2, length(tournament.data), 3))
player.rating.info <- tournament.data[player.rating.data]
player.name <- str_extract(player.info, "\\s+([[:alpha:]- ]+)\\b\\s*\\|")
player.name <- gsub(player.name, pattern = "|", replacement = "", fixed = T)
player.name <- trimws(player.name)
head(player.name)
player.state <- str_extract(player.rating.info, "[[:alpha:]]{2}")
head(player.state)
player.prerating.score <- str_extract(player.rating.info, ".\\: \\s?[[:digit:]]{3,4}")
player.prerating.score <- gsub(player.prerating.score, pattern = "R: ", replacement = "", fixed = T)
player.prerating.score <- as.numeric(as.character(player.prerating.score))
head(player.prerating.score)
player.opponent.info <- str_extract_all(player.info, "[[:digit:]]{1,2}\\|")
player.opponent.info <- str_extract_all(player.opponent.info, "[[:digit:]]{1,2}")
player.opponent.info <- lapply(player.opponent.info, as.numeric)
head(player.opponent.info)
player.total.points <- str_extract(player.info, "[[:digit:]]+\\.[[:digit:]]")
player.total.points <- as.numeric(as.character(player.total.points))
head(player.total.points)
